version: "2"
services:
  nginx:
    container_name: js-box-nginx-${JS_BOX_ENVIRONMENT}-${JS_BOX_CLIENT}
    image: nginx:latest
    restart: always
    env_file:
      - ./.env
    volumes:
      - ./nginx:/app/nginx/
      - ./logs/nginx:/app/logs
    ports:
      - "${JS_BOX_ACCESS_PORT}:8000"
    expose:
      - ${JS_BOX_ACCESS_PORT}
    environment:
      - NGINX_HOST=${JS_BOX_ACCESS_HOST}
    command: /bin/bash -c "envsubst < /app/nginx/nginx-${JS_BOX_ENVIRONMENT}.conf > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - client
      - api
    networks:
      - network
  client:
    container_name: js-box-client-${JS_BOX_ENVIRONMENT}-${JS_BOX_CLIENT}
    extends:
      file: docker-compose-${JS_BOX_ENVIRONMENT}.yml
      service: client
    build:
      context: .
      dockerfile: .docker-client-${JS_BOX_CLIENT}-${JS_BOX_ENVIRONMENT}.dockerfile
    restart: always
    env_file:
      - ./.env
    environment:
      - NODE_ENV=${JS_BOX_ENVIRONMENT}
    volumes:
      - ./logs/client-${JS_BOX_CLIENT}:/app/logs
    depends_on:
      - api
    networks:
      - network
  api:
    container_name: js-box-api-${JS_BOX_ENVIRONMENT}-${JS_BOX_CLIENT}
    extends:
      file: docker-compose-${JS_BOX_ENVIRONMENT}.yml
      service: api
    build:
      context: .
      dockerfile: .docker-api-${JS_BOX_ENVIRONMENT}.dockerfile
    restart: always
    user: "node"
    env_file:
      - ./.env
    volumes:
      - ./logs/api:/app/logs
    privileged: true
    depends_on:
      - mongodb
    networks:
      - network
  mongodb:
    container_name: js-box-mongodb-${JS_BOX_ENVIRONMENT}-${JS_BOX_CLIENT}
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${JS_BOX_MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${JS_BOX_MONGO_PASSWORD}
    ports:
      - ${JS_BOX_MONGODB_PORT}:27017
    networks:
      - network
networks:
    network:
        driver: bridge
